{
  "license": "BSD-3-Clause",
  "dependencies": {},
  "devDependencies": {
    "@babel/preset-env": "^7.22.15",
    "@custom-elements-manifest/analyzer": "^0.8.4",
    "@open-wc/building-rollup": "^2.2.3",
    "@open-wc/eslint-config": "^12.0.0",
    "@rollup/plugin-babel": "^5.3.1",
    "@rollup/plugin-node-resolve": "^15.2.1",
    "@types/page": "^1.11.6",
    "@typescript-eslint/eslint-plugin": "^6.6.0",
    "@typescript-eslint/parser": "^6.6.0",
    "@web/dev-server": "^0.3.1",
    "@web/rollup-plugin-html": "^2.0.1",
    "@web/rollup-plugin-import-meta-assets": "^2.0.2",
    "babel-plugin-template-html-minifier": "^4.1.0",
    "concurrently": "^8.2.1",
    "deepmerge": "^4.3.1",
    "eslint": "^8.48.0",
    "eslint-config-prettier": "^9.0.0",
    "prettier": "^3.0.3",
    "pwa-asset-generator": "^6.3.1",
    "replace": "^1.2.2",
    "rimraf": "^3.0.2",
    "rollup": "^2.79.1",
    "rollup-plugin-cleanup": "^3.2.1",
    "rollup-plugin-copy": "^3.5.0",
    "rollup-plugin-terser": "^7.0.2",
    "rollup-plugin-workbox": "^7.0.1",
    "tslib": "^2.6.2",
    "typescript": "^5.2.2"
  },
  "scripts": {
    "start": "concurrently --kill-others --names tsc,wds  \"npm run tsc:watch\" \"web-dev-server\"",
    "build": "rimraf dist && rollup -c rollup.config.js",
    "clean:dev": "rimraf \"src/**/*.js.map\" \"src/**/*.js\"",
    "clean:modules": "rimraf \"./**/node_modules/!(rimraf|.bin)\" \"./package-lock.json\"",
    "clean:all": "npm run clean:dev && npm run clean:modules",
    "gen:assets": "pwa-asset-generator manifest/icon.svg manifest --opaque --icon-only --type png --manifest ./manifest.json --padding '20%'"
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "no-new": "warn",
      "quotes": [
        "error",
        "single",
        {
          "avoidEscape": true
        }
      ],
      "no-var": "error",
      "curly": "error",
      "no-floating-decimal": "error",
      "arrow-body-style": [
        "error",
        "as-needed",
        {
          "requireReturnForObjectLiteral": false
        }
      ]
    }
  },
  "prettier": {
    "trailingComma": "es5",
    "semi": true,
    "singleQuote": true,
    "printWidth": 160
  }
}
